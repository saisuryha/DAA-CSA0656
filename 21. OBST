#include <stdio.h>
#include <limits.h>
#define N 4
int sum(int freq[], int i, int j) {
    int k,s = 0;
    for ( k = i; k <= j; k++)
        s += freq[k];
    return s;
}
int optimalBST(int keys[], int freq[], int n) {
    int i,L,r,cost[N][N];
    for ( i = 0; i < n; i++) 
        cost[i][i] = freq[i];
    for ( L = 2; L <= n; L++) { 
        for ( i = 0; i <= n - L; i++) {
            int j = i + L - 1;
            cost[i][j] = INT_MAX;

            for (r = i; r <= j; r++) {
                int c = ((r > i) ? cost[i][r - 1] : 0) +
                        ((r < j) ? cost[r + 1][j] : 0) +
                        sum(freq, i, j);

                if (c < cost[i][j])
                    cost[i][j] = c;
            }
        }
    }
    return cost[0][n - 1];
}


int main() {
	printf("sai suryha (192210685)\n");
    int keys[] = {10, 12, 20, 35};
    int freq[] = {34, 8, 50, 12};
    int n = sizeof(keys) / sizeof(keys[0]);
    printf("Cost of the Optimal BST is %d\n", optimalBST(keys, freq, n));
    return 0;
}
